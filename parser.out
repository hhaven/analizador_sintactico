Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASSIGN
    DO
    FOR
    INCLUDE
    NOT
    OR
    VOID
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> variable_declaration
Rule 4     statement -> conditional_statement
Rule 5     statement -> function_call SEMICOLON
Rule 6     statement -> return_statement
Rule 7     statement -> function_declaration
Rule 8     return_statement -> RETURN expression SEMICOLON
Rule 9     return_statement -> RETURN SEMICOLON
Rule 10    variable_declaration -> TYPE ID SEMICOLON
Rule 11    conditional_statement -> IF LPAREN expression RPAREN compound_statement
Rule 12    conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement
Rule 13    compound_statement -> LBRACE statement_list RBRACE
Rule 14    compound_statement -> LBRACE RBRACE
Rule 15    expression -> STRING
Rule 16    expression -> ID
Rule 17    expression -> NUMBER
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> expression PLUS expression
Rule 20    expression -> expression MINUS expression
Rule 21    expression -> expression TIMES expression
Rule 22    expression -> expression DIVIDE expression
Rule 23    expression -> expression LT expression
Rule 24    expression -> expression LE expression
Rule 25    expression -> expression GT expression
Rule 26    expression -> expression GE expression
Rule 27    expression -> expression EQ expression
Rule 28    expression -> expression NE expression
Rule 29    function_call -> ID LPAREN argument_list RPAREN
Rule 30    function_call -> ID LPAREN RPAREN
Rule 31    function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
Rule 32    function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 33    argument_list -> argument_list COMMA expression
Rule 34    argument_list -> expression
Rule 35    statement_list -> statement_list statement
Rule 36    statement_list -> statement

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 
COMMA                : 33
DIVIDE               : 22
DO                   : 
ELSE                 : 12
EQ                   : 27
FOR                  : 
GE                   : 26
GT                   : 25
ID                   : 10 16 29 30 31 32
IF                   : 11 12
INCLUDE              : 
LBRACE               : 13 14 31 32
LE                   : 24
LPAREN               : 11 12 18 29 30 31 32
LT                   : 23
MINUS                : 20
NE                   : 28
NOT                  : 
NUMBER               : 17
OR                   : 
PLUS                 : 19
RBRACE               : 13 14 31 32
RETURN               : 8 9
RPAREN               : 11 12 18 29 30 31 32
SEMICOLON            : 5 8 9 10
STRING               : 15
TIMES                : 21
TYPE                 : 10 31 32
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 29 31 33
compound_statement   : 11 12 12
conditional_statement : 4
expression           : 8 11 12 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 33 34
function_call        : 5
function_declaration : 7
program              : 1 0
return_statement     : 6
statement            : 1 2 35 36
statement_list       : 13 31 32 35
variable_declaration : 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    program                        shift and go to state 1
    statement                      shift and go to state 2
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement                      shift and go to state 12
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 2

    (2) program -> statement .

    TYPE            reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    RETURN          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> variable_declaration .

    TYPE            reduce using rule 3 (statement -> variable_declaration .)
    IF              reduce using rule 3 (statement -> variable_declaration .)
    ID              reduce using rule 3 (statement -> variable_declaration .)
    RETURN          reduce using rule 3 (statement -> variable_declaration .)
    $end            reduce using rule 3 (statement -> variable_declaration .)
    RBRACE          reduce using rule 3 (statement -> variable_declaration .)


state 4

    (4) statement -> conditional_statement .

    TYPE            reduce using rule 4 (statement -> conditional_statement .)
    IF              reduce using rule 4 (statement -> conditional_statement .)
    ID              reduce using rule 4 (statement -> conditional_statement .)
    RETURN          reduce using rule 4 (statement -> conditional_statement .)
    $end            reduce using rule 4 (statement -> conditional_statement .)
    RBRACE          reduce using rule 4 (statement -> conditional_statement .)


state 5

    (5) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 13


state 6

    (6) statement -> return_statement .

    TYPE            reduce using rule 6 (statement -> return_statement .)
    IF              reduce using rule 6 (statement -> return_statement .)
    ID              reduce using rule 6 (statement -> return_statement .)
    RETURN          reduce using rule 6 (statement -> return_statement .)
    $end            reduce using rule 6 (statement -> return_statement .)
    RBRACE          reduce using rule 6 (statement -> return_statement .)


state 7

    (7) statement -> function_declaration .

    TYPE            reduce using rule 7 (statement -> function_declaration .)
    IF              reduce using rule 7 (statement -> function_declaration .)
    ID              reduce using rule 7 (statement -> function_declaration .)
    RETURN          reduce using rule 7 (statement -> function_declaration .)
    $end            reduce using rule 7 (statement -> function_declaration .)
    RBRACE          reduce using rule 7 (statement -> function_declaration .)


state 8

    (10) variable_declaration -> TYPE . ID SEMICOLON
    (31) function_declaration -> TYPE . ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> TYPE . ID LPAREN RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 14


state 9

    (29) function_call -> ID . LPAREN argument_list RPAREN
    (30) function_call -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 15


state 10

    (11) conditional_statement -> IF . LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> IF . LPAREN expression RPAREN compound_statement ELSE compound_statement

    LPAREN          shift and go to state 16


state 11

    (8) return_statement -> RETURN . expression SEMICOLON
    (9) return_statement -> RETURN . SEMICOLON
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    SEMICOLON       shift and go to state 18
    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 17

state 12

    (1) program -> program statement .

    TYPE            reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    RETURN          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 13

    (5) statement -> function_call SEMICOLON .

    TYPE            reduce using rule 5 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 5 (statement -> function_call SEMICOLON .)
    ID              reduce using rule 5 (statement -> function_call SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> function_call SEMICOLON .)
    $end            reduce using rule 5 (statement -> function_call SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> function_call SEMICOLON .)


state 14

    (10) variable_declaration -> TYPE ID . SEMICOLON
    (31) function_declaration -> TYPE ID . LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> TYPE ID . LPAREN RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 23
    LPAREN          shift and go to state 24


state 15

    (29) function_call -> ID LPAREN . argument_list RPAREN
    (30) function_call -> ID LPAREN . RPAREN
    (33) argument_list -> . argument_list COMMA expression
    (34) argument_list -> . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    RPAREN          shift and go to state 26
    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    argument_list                  shift and go to state 25
    expression                     shift and go to state 27

state 16

    (11) conditional_statement -> IF LPAREN . expression RPAREN compound_statement
    (12) conditional_statement -> IF LPAREN . expression RPAREN compound_statement ELSE compound_statement
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 28

state 17

    (8) return_statement -> RETURN expression . SEMICOLON
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

    SEMICOLON       shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39


state 18

    (9) return_statement -> RETURN SEMICOLON .

    TYPE            reduce using rule 9 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 9 (return_statement -> RETURN SEMICOLON .)
    ID              reduce using rule 9 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 9 (return_statement -> RETURN SEMICOLON .)
    $end            reduce using rule 9 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 9 (return_statement -> RETURN SEMICOLON .)


state 19

    (15) expression -> STRING .

    SEMICOLON       reduce using rule 15 (expression -> STRING .)
    PLUS            reduce using rule 15 (expression -> STRING .)
    MINUS           reduce using rule 15 (expression -> STRING .)
    TIMES           reduce using rule 15 (expression -> STRING .)
    DIVIDE          reduce using rule 15 (expression -> STRING .)
    LT              reduce using rule 15 (expression -> STRING .)
    LE              reduce using rule 15 (expression -> STRING .)
    GT              reduce using rule 15 (expression -> STRING .)
    GE              reduce using rule 15 (expression -> STRING .)
    EQ              reduce using rule 15 (expression -> STRING .)
    NE              reduce using rule 15 (expression -> STRING .)
    RPAREN          reduce using rule 15 (expression -> STRING .)
    COMMA           reduce using rule 15 (expression -> STRING .)


state 20

    (16) expression -> ID .

    SEMICOLON       reduce using rule 16 (expression -> ID .)
    PLUS            reduce using rule 16 (expression -> ID .)
    MINUS           reduce using rule 16 (expression -> ID .)
    TIMES           reduce using rule 16 (expression -> ID .)
    DIVIDE          reduce using rule 16 (expression -> ID .)
    LT              reduce using rule 16 (expression -> ID .)
    LE              reduce using rule 16 (expression -> ID .)
    GT              reduce using rule 16 (expression -> ID .)
    GE              reduce using rule 16 (expression -> ID .)
    EQ              reduce using rule 16 (expression -> ID .)
    NE              reduce using rule 16 (expression -> ID .)
    RPAREN          reduce using rule 16 (expression -> ID .)
    COMMA           reduce using rule 16 (expression -> ID .)


state 21

    (17) expression -> NUMBER .

    SEMICOLON       reduce using rule 17 (expression -> NUMBER .)
    PLUS            reduce using rule 17 (expression -> NUMBER .)
    MINUS           reduce using rule 17 (expression -> NUMBER .)
    TIMES           reduce using rule 17 (expression -> NUMBER .)
    DIVIDE          reduce using rule 17 (expression -> NUMBER .)
    LT              reduce using rule 17 (expression -> NUMBER .)
    LE              reduce using rule 17 (expression -> NUMBER .)
    GT              reduce using rule 17 (expression -> NUMBER .)
    GE              reduce using rule 17 (expression -> NUMBER .)
    EQ              reduce using rule 17 (expression -> NUMBER .)
    NE              reduce using rule 17 (expression -> NUMBER .)
    RPAREN          reduce using rule 17 (expression -> NUMBER .)
    COMMA           reduce using rule 17 (expression -> NUMBER .)


state 22

    (18) expression -> LPAREN . expression RPAREN
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 40

state 23

    (10) variable_declaration -> TYPE ID SEMICOLON .

    TYPE            reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)
    IF              reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)
    ID              reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)
    RETURN          reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)
    $end            reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)
    RBRACE          reduce using rule 10 (variable_declaration -> TYPE ID SEMICOLON .)


state 24

    (31) function_declaration -> TYPE ID LPAREN . argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> TYPE ID LPAREN . RPAREN LBRACE statement_list RBRACE
    (33) argument_list -> . argument_list COMMA expression
    (34) argument_list -> . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    RPAREN          shift and go to state 42
    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    argument_list                  shift and go to state 41
    expression                     shift and go to state 27

state 25

    (29) function_call -> ID LPAREN argument_list . RPAREN
    (33) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 43
    COMMA           shift and go to state 44


state 26

    (30) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 30 (function_call -> ID LPAREN RPAREN .)


state 27

    (34) argument_list -> expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

    RPAREN          reduce using rule 34 (argument_list -> expression .)
    COMMA           reduce using rule 34 (argument_list -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39


state 28

    (11) conditional_statement -> IF LPAREN expression . RPAREN compound_statement
    (12) conditional_statement -> IF LPAREN expression . RPAREN compound_statement ELSE compound_statement
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

    RPAREN          shift and go to state 45
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39


state 29

    (8) return_statement -> RETURN expression SEMICOLON .

    TYPE            reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 8 (return_statement -> RETURN expression SEMICOLON .)


state 30

    (19) expression -> expression PLUS . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 46

state 31

    (20) expression -> expression MINUS . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 47

state 32

    (21) expression -> expression TIMES . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 48

state 33

    (22) expression -> expression DIVIDE . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 49

state 34

    (23) expression -> expression LT . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 50

state 35

    (24) expression -> expression LE . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 51

state 36

    (25) expression -> expression GT . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 52

state 37

    (26) expression -> expression GE . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 53

state 38

    (27) expression -> expression EQ . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 54

state 39

    (28) expression -> expression NE . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 55

state 40

    (18) expression -> LPAREN expression . RPAREN
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39


state 41

    (31) function_declaration -> TYPE ID LPAREN argument_list . RPAREN LBRACE statement_list RBRACE
    (33) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 57
    COMMA           shift and go to state 44


state 42

    (32) function_declaration -> TYPE ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 58


state 43

    (29) function_call -> ID LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 29 (function_call -> ID LPAREN argument_list RPAREN .)


state 44

    (33) argument_list -> argument_list COMMA . expression
    (15) expression -> . STRING
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression LE expression
    (25) expression -> . expression GT expression
    (26) expression -> . expression GE expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NE expression

    STRING          shift and go to state 19
    ID              shift and go to state 20
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 22

    expression                     shift and go to state 59

state 45

    (11) conditional_statement -> IF LPAREN expression RPAREN . compound_statement
    (12) conditional_statement -> IF LPAREN expression RPAREN . compound_statement ELSE compound_statement
    (13) compound_statement -> . LBRACE statement_list RBRACE
    (14) compound_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 61

    compound_statement             shift and go to state 60

state 46

    (19) expression -> expression PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 19 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression PLUS expression .) ]


state 47

    (20) expression -> expression MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 20 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 20 (expression -> expression MINUS expression .) ]


state 48

    (21) expression -> expression TIMES expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 21 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 21 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 21 (expression -> expression TIMES expression .) ]


state 49

    (22) expression -> expression DIVIDE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! NE              [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]


state 50

    (23) expression -> expression LT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 23 (expression -> expression LT expression .)
    RPAREN          reduce using rule 23 (expression -> expression LT expression .)
    COMMA           reduce using rule 23 (expression -> expression LT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 23 (expression -> expression LT expression .) ]


state 51

    (24) expression -> expression LE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 24 (expression -> expression LE expression .)
    RPAREN          reduce using rule 24 (expression -> expression LE expression .)
    COMMA           reduce using rule 24 (expression -> expression LE expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 24 (expression -> expression LE expression .) ]


state 52

    (25) expression -> expression GT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 25 (expression -> expression GT expression .)
    RPAREN          reduce using rule 25 (expression -> expression GT expression .)
    COMMA           reduce using rule 25 (expression -> expression GT expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 25 (expression -> expression GT expression .) ]


state 53

    (26) expression -> expression GE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 26 (expression -> expression GE expression .)
    RPAREN          reduce using rule 26 (expression -> expression GE expression .)
    COMMA           reduce using rule 26 (expression -> expression GE expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 26 (expression -> expression GE expression .) ]


state 54

    (27) expression -> expression EQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 27 (expression -> expression EQ expression .)
    COMMA           reduce using rule 27 (expression -> expression EQ expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression EQ expression .) ]


state 55

    (28) expression -> expression NE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression NE expression .)
    RPAREN          reduce using rule 28 (expression -> expression NE expression .)
    COMMA           reduce using rule 28 (expression -> expression NE expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39

  ! PLUS            [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 28 (expression -> expression NE expression .) ]


state 56

    (18) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 57

    (31) function_declaration -> TYPE ID LPAREN argument_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 62


state 58

    (32) function_declaration -> TYPE ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (35) statement_list -> . statement_list statement
    (36) statement_list -> . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement_list                 shift and go to state 63
    statement                      shift and go to state 64
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 59

    (33) argument_list -> argument_list COMMA expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . LE expression
    (25) expression -> expression . GT expression
    (26) expression -> expression . GE expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NE expression

    RPAREN          reduce using rule 33 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 33 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    LT              shift and go to state 34
    LE              shift and go to state 35
    GT              shift and go to state 36
    GE              shift and go to state 37
    EQ              shift and go to state 38
    NE              shift and go to state 39


state 60

    (11) conditional_statement -> IF LPAREN expression RPAREN compound_statement .
    (12) conditional_statement -> IF LPAREN expression RPAREN compound_statement . ELSE compound_statement

    TYPE            reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    IF              reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    ID              reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    RETURN          reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    $end            reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    RBRACE          reduce using rule 11 (conditional_statement -> IF LPAREN expression RPAREN compound_statement .)
    ELSE            shift and go to state 65


state 61

    (13) compound_statement -> LBRACE . statement_list RBRACE
    (14) compound_statement -> LBRACE . RBRACE
    (35) statement_list -> . statement_list statement
    (36) statement_list -> . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    RBRACE          shift and go to state 67
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement_list                 shift and go to state 66
    statement                      shift and go to state 64
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 62

    (31) function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE . statement_list RBRACE
    (35) statement_list -> . statement_list statement
    (36) statement_list -> . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement_list                 shift and go to state 68
    statement                      shift and go to state 64
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 63

    (32) function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (35) statement_list -> statement_list . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    RBRACE          shift and go to state 69
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement                      shift and go to state 70
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 64

    (36) statement_list -> statement .

    RBRACE          reduce using rule 36 (statement_list -> statement .)
    TYPE            reduce using rule 36 (statement_list -> statement .)
    IF              reduce using rule 36 (statement_list -> statement .)
    ID              reduce using rule 36 (statement_list -> statement .)
    RETURN          reduce using rule 36 (statement_list -> statement .)


state 65

    (12) conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE . compound_statement
    (13) compound_statement -> . LBRACE statement_list RBRACE
    (14) compound_statement -> . LBRACE RBRACE

    LBRACE          shift and go to state 61

    compound_statement             shift and go to state 71

state 66

    (13) compound_statement -> LBRACE statement_list . RBRACE
    (35) statement_list -> statement_list . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    RBRACE          shift and go to state 72
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement                      shift and go to state 70
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 67

    (14) compound_statement -> LBRACE RBRACE .

    ELSE            reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    TYPE            reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    IF              reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    ID              reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    RETURN          reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    $end            reduce using rule 14 (compound_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 14 (compound_statement -> LBRACE RBRACE .)


state 68

    (31) function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list . RBRACE
    (35) statement_list -> statement_list . statement
    (3) statement -> . variable_declaration
    (4) statement -> . conditional_statement
    (5) statement -> . function_call SEMICOLON
    (6) statement -> . return_statement
    (7) statement -> . function_declaration
    (10) variable_declaration -> . TYPE ID SEMICOLON
    (11) conditional_statement -> . IF LPAREN expression RPAREN compound_statement
    (12) conditional_statement -> . IF LPAREN expression RPAREN compound_statement ELSE compound_statement
    (29) function_call -> . ID LPAREN argument_list RPAREN
    (30) function_call -> . ID LPAREN RPAREN
    (8) return_statement -> . RETURN expression SEMICOLON
    (9) return_statement -> . RETURN SEMICOLON
    (31) function_declaration -> . TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE
    (32) function_declaration -> . TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE

    RBRACE          shift and go to state 73
    TYPE            shift and go to state 8
    IF              shift and go to state 10
    ID              shift and go to state 9
    RETURN          shift and go to state 11

    statement                      shift and go to state 70
    variable_declaration           shift and go to state 3
    conditional_statement          shift and go to state 4
    function_call                  shift and go to state 5
    return_statement               shift and go to state 6
    function_declaration           shift and go to state 7

state 69

    (32) function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .

    TYPE            reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 32 (function_declaration -> TYPE ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 70

    (35) statement_list -> statement_list statement .

    RBRACE          reduce using rule 35 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 35 (statement_list -> statement_list statement .)
    IF              reduce using rule 35 (statement_list -> statement_list statement .)
    ID              reduce using rule 35 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 35 (statement_list -> statement_list statement .)


state 71

    (12) conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .

    TYPE            reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    IF              reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    ID              reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RETURN          reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    $end            reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)
    RBRACE          reduce using rule 12 (conditional_statement -> IF LPAREN expression RPAREN compound_statement ELSE compound_statement .)


state 72

    (13) compound_statement -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 13 (compound_statement -> LBRACE statement_list RBRACE .)


state 73

    (31) function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .

    TYPE            reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 31 (function_declaration -> TYPE ID LPAREN argument_list RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: shift/reduce conflict for LT in state 46 resolved as shift
WARNING: shift/reduce conflict for LE in state 46 resolved as shift
WARNING: shift/reduce conflict for GT in state 46 resolved as shift
WARNING: shift/reduce conflict for GE in state 46 resolved as shift
WARNING: shift/reduce conflict for EQ in state 46 resolved as shift
WARNING: shift/reduce conflict for NE in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 47 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 47 resolved as shift
WARNING: shift/reduce conflict for LT in state 47 resolved as shift
WARNING: shift/reduce conflict for LE in state 47 resolved as shift
WARNING: shift/reduce conflict for GT in state 47 resolved as shift
WARNING: shift/reduce conflict for GE in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NE in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for LT in state 48 resolved as shift
WARNING: shift/reduce conflict for LE in state 48 resolved as shift
WARNING: shift/reduce conflict for GT in state 48 resolved as shift
WARNING: shift/reduce conflict for GE in state 48 resolved as shift
WARNING: shift/reduce conflict for EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NE in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for LE in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for GE in state 49 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NE in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for LT in state 50 resolved as shift
WARNING: shift/reduce conflict for LE in state 50 resolved as shift
WARNING: shift/reduce conflict for GT in state 50 resolved as shift
WARNING: shift/reduce conflict for GE in state 50 resolved as shift
WARNING: shift/reduce conflict for EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NE in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for LT in state 51 resolved as shift
WARNING: shift/reduce conflict for LE in state 51 resolved as shift
WARNING: shift/reduce conflict for GT in state 51 resolved as shift
WARNING: shift/reduce conflict for GE in state 51 resolved as shift
WARNING: shift/reduce conflict for EQ in state 51 resolved as shift
WARNING: shift/reduce conflict for NE in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for LT in state 53 resolved as shift
WARNING: shift/reduce conflict for LE in state 53 resolved as shift
WARNING: shift/reduce conflict for GT in state 53 resolved as shift
WARNING: shift/reduce conflict for GE in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NE in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for LT in state 54 resolved as shift
WARNING: shift/reduce conflict for LE in state 54 resolved as shift
WARNING: shift/reduce conflict for GT in state 54 resolved as shift
WARNING: shift/reduce conflict for GE in state 54 resolved as shift
WARNING: shift/reduce conflict for EQ in state 54 resolved as shift
WARNING: shift/reduce conflict for NE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for LE in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for GE in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NE in state 55 resolved as shift
